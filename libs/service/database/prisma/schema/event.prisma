model Event {
  id          String           @id @default(uuid(7))
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  location    String?
  userId      String
  user        UserAccount      @relation("UserEvents", fields: [userId], references: [id])
  attendees   EventAttendee[]
  recurrence  EventRecurrence? // Optional: For recurring events
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

enum EventAttendeeStatus {
  PENDING
  ACCEPTED
  DECLINED
  TENTATIVE
  UNKNOWN
}

model EventAttendee {
  id        String              @id @default(uuid(7))
  eventId   String
  event     Event               @relation(fields: [eventId], references: [id])
  userId    String
  user      UserAccount         @relation(fields: [userId], references: [id])
  status    EventAttendeeStatus @default(PENDING)
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@unique([eventId, userId]) // Ensure unique attendee per event
}

model EventRecurrence {
  id        String    @id @default(uuid(7))
  frequency String // e.g., 'daily', 'weekly', 'monthly'
  interval  Int // e.g., 1 for daily, 2 for every other week
  until     DateTime? // End date of recurrence
  eventId   String    @unique
  event     Event     @relation(fields: [eventId], references: [id])
}
